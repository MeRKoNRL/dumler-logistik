import React, { useState } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { useRole } from './RoleContext';

const Sidebar = () => {
  const location = useLocation();
  const { role } = useRole();
  const [open, setOpen] = useState(false);

  const links = [
    { to: '/dashboard', label: '–î–∞—à–±–æ—Ä–¥', icon: '' },
    { to: '/request', label: '–ó–∞—è–≤–∫–∞', icon: 'üöõ', roles: ['–≤–æ–¥–∏—Ç–µ–ª—å', '–¥–∏—Å–ø–µ—Ç—á–µ—Ä'] },
    { to: '/clients', label: '–ö–ª–∏–µ–Ω—Ç—ã', icon: 'üì¶', roles: ['–¥–∏—Å–ø–µ—Ç—á–µ—Ä', '–∞–¥–º–∏–Ω'] },
    { to: '/vehicles', label: '–ê–≤—Ç–æ–º–æ–±–∏–ª–∏', icon: 'üõ†', roles: ['–¥–∏—Å–ø–µ—Ç—á–µ—Ä', '–∞–¥–º–∏–Ω'] },
    { to: '/calendar', label: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å', icon: 'üóì', roles: ['–¥–∏—Å–ø–µ—Ç—á–µ—Ä', '–∞–¥–º–∏–Ω'] },
    { to: '/driver-info', label: '–ò–Ω—Ñ–æ –≤–æ–¥–∏—Ç–µ–ª—è', icon: 'üßæ', roles: ['–≤–æ–¥–∏—Ç–µ–ª—å'] },
    { to: '/admin', label: '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', icon: 'üë•', roles: ['–∞–¥–º–∏–Ω'] },
    { to: '/logs', label: '–ñ—É—Ä–Ω–∞–ª', icon: 'üìú', roles: ['–∞–¥–º–∏–Ω', '–¥–∏—Å–ø–µ—Ç—á–µ—Ä'] },
  ];

  return (
    <>
      {/* –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é */}
      <div className="md:hidden flex justify-between items-center p-4 bg-white shadow sticky top-0 z-50">
        <h1 className="text-xl font-bold"> Dumler</h1>
        <button onClick={() => setOpen(!open)} className="text-2xl">
          {open ? '‚úñÔ∏è' : '‚ò∞'}
        </button>
      </div>
      {open && (
        <div className="md:hidden bg-white border-b px-4 py-2 space-y-2">
          {links.filter(link => !link.roles || link.roles.includes(role)).map((link, i) => (
            <Link
              key={i}
              to={link.to}
              onClick={() => setOpen(false)}
              className={`block py-2 ${location.pathname === link.to ? 'font-bold' : ''}`}
            >
              {link.icon} {link.label}
            </Link>
          ))}
        </div>
      )}

      {/* –î–µ—Å–∫—Ç–æ–ø–Ω–æ–µ –º–µ–Ω—é */}
      <div className="hidden md:block w-64 min-h-screen bg-white shadow-md p-4 fixed">
        <h1 className="text-2xl font-bold mb-6"> Dumler</h1>
        <ul className="space-y-2">
          {links
            .filter(link => !link.roles || link.roles.includes(role))
            .map((link, i) => (
              <li key={i}>
                <Link
                  to={link.to}
                  className={`block p-2 rounded ${
                    location.pathname === link.to ? 'bg-blue-100 font-semibold' : 'hover:bg-gray-100'
                  }`}
                >
                  {link.icon} {link.label}
                </Link>
              </li>
            ))}
        </ul>
      </div>
    </>
  );
};

export default Sidebar;
